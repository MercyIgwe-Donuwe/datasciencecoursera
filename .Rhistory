q()
q()
dat<-read.spss("Complete project data.sav",to.data.frame = T)
as.numeric(dat$Num_Female)
install.packages("read.spss")
?spss
foreign
foreign::read.spss("Complete project data.sav",to.data.frame = T)
foreign::read.spss("My Data",to.data.frame = T)
getOption("repos")
getOption("repos")
install.packages("rtools")
getOption("repos")
install.packages("rtools")
getOption("repos")
getOption("repos")
foreign::read.spss("My Data",to.data.frame = T)
foreign::read.spss("My Data.sav",to.data.frame = T)
foreign(spss)
load(spss)
library("foreign", lib.loc="C:/Program Files/R/R-3.4.1/library")
x<-factor(c("yes","yes","no","yes","no"))
x
table(x)
unclass(x)
x<-factor(c("yes","yes","no","yes","no"), levels = c("yes","no"))
x
unclass(x)
x<-c(1,2,NA,10,3)
is.na(x)
x<-c(1,2,NaN,NA,4)
is.na(x)
is.nan(x)
x<-data.frame(foo = 1:14, bar = c(T,T,F,F))
x<-data.frame(foo = 1:4, bar = c(T,T,F,F))
x
nrow
nrow(x)
ncol(x)
x<-1:3
names(x)
names(x)<-c("foo","bar","norf")
x
names(x)
x <- list(a = 1, b = 2, c = 3)
x
m <-matrix (1:4, nrow =2, ncol=2)
dimnames(m)<- list(c("a","b"),c("c","d"))
m
initial<-read.table("datatable.txt", nrow = 100)
y<-data.frame(a=1,b="a")
dput (y)
dput(y,file="y.R")
new.y<-dget("y.R")
new.y
x<-"foo"
y <- data.frame (a =1, b="a")
dump(c("x","y"), file ="data.R")
rm(x,y)
source("data.R")
y
x
install.packages("caret")
install.packages("caret")
install.packages("xtable")
install.packages("stargazer")
install.packages("rmarkdown")
install.packages("rmarkdown")
install.packages("rmarkdown")
load(caret)
load("caret")
getwd()
library(caret)
getwd()
setwd("C:/Users/user/Desktop/Mercy/Coursera")
if(x>3){y <- 10}
if(x>3){y <- 10}
if(x>3){y <- 10} else {y<-0}
x = 7
y
x = 1
y
if(x>3){y <- 10} else {y<-0}
x = 1
y
y <- if(x>6) {10} else {0}
x = 2, print (y)
x = 2 print (y)
y
x = 4
y
x = 89
y
y <- if(x>6) {10} else {0}
x = 89
y
ls()
rm(list=ls())
ls()
for (i in 1:10)
{ print (x[i])}
{ print (i)}
{ print (x[i])}
for (i in 1:10)
{print(i)}
x <- c("a","b", "c", "d")
for (i in 1:4)
{}
for (i in 1:4)
print (x[i])
for (i in seq_along(x))
{print (x[i])}
for(letter in x)
{print (letter)}
x<-matrix (1:6,2,3)
for (i in seq_len(nrow(x)))
{ for(j in seq_len (ncol(x)))
{print (x[i,j])}}
count <- 0
while (count <10)
{print (count)
count <- count + 1
}
z<-5
while (z>=3 && z <=10)
{ print (z)
coin <- rbinom(1,1,0.5)
if (coin = 1) {
if (coin = 1)
if (coin = 1)
z<-5
> while (z>=3 && z <=10)
+ { print (z)
+ coin <- rbinom(1,1,0.5)
+ if (coin = 1){z <- z + 1}
z<-5
> while (z>=3 && z <=10)
+ { print (z)
+ coin <- rbinom(1,1,0.5)
+ if (coin = 1){z<-z + 1} else {z <- z - 1}}
z<-5
> while (z>=3 && z <=10)
+ { print (z)
+ coin <- rbinom(1,1,0.5)
+ if (coin = "1"){z<-z + 1} else {z <- z - 1}}
z<-5
> while (z>=3 && z <=10)
+ { print (z)
+ coin <- rbinom(1,1,0.5)
+ if (coin = 1){z<-z + 1} else {z <- z - 1}}
z<-5
> while (z>=3 && z <=10)
+ { print (z)
+ coin <- rbinom(1,1,0.5)
+ if (coin = 1){z<-z + 1} else {z <- z - 1}}
